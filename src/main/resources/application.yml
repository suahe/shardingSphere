server:
  port: 8080
  # 配置ds0 和ds1两个数据源
spring:
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  shardingsphere:
    datasource:
      names: ds,ds0,ds1
      #ds 配置
      ds:
        type: com.alibaba.druid.pool.DruidDataSource
#        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.0.1:3306/test_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        url: jdbc:mysql://127.0.0.1:3306/test_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      #ds0 配置
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/test_ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      #ds1 配置
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/test_ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
    # 默认的分库策略：id取模
    sharding:
      # 指定不需要分表的普通表使用的数据源
      default-data-source-name: ds
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: ds$->{id % 2}
      tables:
        t_bill:
          actual-data-nodes: ds$->{0..1}.t_bill_$->{2022..2022}_$->{1..12}
          #数据库分片字段
          database-strategy:
            standard:
              sharding-column: order_id
              #自定义数据库分片策略
              precise-algorithm-class-name: com.sah.shardingshere.config.DBShardingAlgorithm
          #表分片字段
          table-strategy:
            standard:
              sharding-column: create_time
              #自定义表分片策略
              precise-algorithm-class-name: com.sah.shardingshere.config.TableShardingAlgorithm
          # 使用SNOWFLAKE算法生成主键
          key-generator:
            column: order_id
            type: SNOWFLAKE
            props:
              worker.id: 123
    props:
      sql:
        show: true

mybatis:
  mapper-locations: classpath:mapping/*.xml
